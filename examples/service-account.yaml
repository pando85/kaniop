# The Kanidm service account custom resource definition (CRD) defines a service account in Kanidm.
apiVersion: kaniop.rs/v1beta1
kind: KanidmServiceAccount
metadata:
  name: demo-service
  namespace: default
#  A service account represents a non-human account in Kanidm used for programmatic access and
#  integrations. Service accounts can have API tokens generated and associated with them for
#  identification and granting extended access rights. These accounts are managed by delegated
#  administrators and can have expiry times and other auditing information attached.
#  More info:
#  https://kanidm.github.io/kanidm/master/accounts/service_accounts.html
spec:
  #  KanidmRef is a reference to a Kanidm object in the same cluster. It is used to specify where
  #  the object is stored.
  kanidmRef:
    name: my-idm
    # # For cross-namespace resources. Reference Kanidm namespace. If omitted, the namespace of the
    # # resource will be used.
    # namespace: default

  #  Attributes that personally identify a service account.
  #
  #  The attributes defined here are set by the operator. If you want to manage those attributes
  #  from the database, do not set them here.
  #  Additionally, if you unset them here, they will be kept in the database.
  serviceAccountAttributes:
    #  Set the display name for the service account.
    displayname: Demo Service Account
    #  Name/spn of a group or account that have entry manager rights over this service account.
    entryManagedBy: kaniop-operator
    # # Set the mail address, can be set multiple times for multiple addresses. The first listed
    # # mail address is the 'primary'.
    # mail:
    # - demo-service@my-idm.localhost
    # - alias-demo-service@my-idm.localhost
    # # Set an account valid from time.
    # #
    # # If omitted, the account will be valid from the time of creation.
    # accountValidFrom: 2021-01-01T00:00:00Z
    # # Set an accounts expiry time.
    # #
    # # If omitted, the account will not expire.
    # accountExpire: 2030-01-01T00:00:00Z

  # # POSIX attributes for the service account. When specified, the operator will activate them.
  # # If omitted, the operator retains the attributes in the database but ceases to manage them.
  # posixAttributes:
  #   # The group ID number (GID) for the person account. In Kanidm there is no difference between
  #   # a UID and a GID number.
  #   #
  #   # If omitted, Kanidm will generate it automatically.
  #   #
  #   # More info:
  #   # https://kanidm.github.io/kanidm/stable/accounts/posix_accounts_and_groups.html#uid-and-gid-numbers
  #   gidnumber: 1000
  #   # The login shell for the person account.
  #   #
  #   # This sets the default shell that will be used when the user logs in via SSH or other
  #   # mechanisms that require a shell. Common values include /bin/bash, /bin/zsh, /bin/sh.
  #   loginshell: /bin/bash

  # # API tokens to be associated with the service account. If omitted, no tokens will be
  # # associated. If specified, the operator will ensure that the tokens exist with the
  # # specified attributes. If the tokens already exist, they will be updated to match the
  # # specified attributes. If the tokens are removed from the spec, they will be deleted from
  # # the service account.
  # apiTokens:
  # # API token configuration for service account authentication.
  # #
  # # API tokens can be used for identification of the service account and for granting extended
  # # access rights. Tokens can be read-only or read-write, and can have expiry times and other
  # # auditing information attached.
  # # A string describing the token. This is not used to identify the token, it is only for human
  # # description of the tokens purpose.
  # - label: default-token
  #   # The purpose of the API token.
  #   #
  #   # Valid options:
  #   # - readonly: Read only tokens cannot make changes (default)
  #   # - readwrite: Read write tokens can perform modifications on behalf of the service account.
  #   # It is recommended to only use read write tokens when performing write operations to Kanidm.
  #   purpose: readwrite
  #   # An optional rfc3339 time of the format "YYYY-MM-DDTHH:MM:SS+TZ",
  #   # "2020-09-25T11:22:02+10:00". After this time the api token will no longer be valid.
  #   expiry: 2024-01-01T00:00:00Z
  #   # The name of the Kubernetes secret where the token value is stored.
  #   # **WARNING**: A change to this field will result in a token rotation.
  #   secretName: demo-service-token

  # # Whether to generate credentials for the service account. If true, the operator will create
  # # a Kubernetes secret containing the service account's password. If false, no secret
  # # will be created. Defaults to false.
  # # Secret name: `{{ name }}-kanidm-service-account-credentials`
  # generateCredentials: true
